name: Build

on:
  workflow_call:
    inputs:
      upload_artifacts:
        required: false
        type: boolean
        default: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            ext: ""
          - os: macos-latest
            ext: ""
          - os: windows-latest
            ext: ".exe"

    steps:
      - uses: actions/checkout@v4

      - name: Get ClearData Room Data
        uses: actions/checkout@v4
        with:
          repository: Moo-ody/Evensmallerdungeonsdata/
          ref: main
          path: ClearData

      - name: Copy room_data into project
        shell: bash
        run: |
          mkdir -p src/room_data
          cp -r ClearData/room_data/* src/room_data/

      - name: Extract version from Cargo.toml
        id: get_version
        shell: bash
        run: |
          version=$(grep '^version =' Cargo.toml | head -n1 | cut -d '"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Cargo Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build --release --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Prepare dist + OS-named binary
        shell: bash
        run: |
          version=$(grep '^version =' Cargo.toml | head -n1 | cut -d '"' -f2)
          mkdir -p dist
          cp target/release/RustClear${{ matrix.ext }} \
             "dist/RustClear-v${{ steps.get_version.outputs.version }}-${{ matrix.os }}${{ matrix.ext }}"

      - name: Upload build artifact
        if: ${{ inputs.upload_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: RustClear-v${{ steps.get_version.outputs.version }}-${{ matrix.os }}
          path: dist/*
